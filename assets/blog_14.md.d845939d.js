import{_ as s,c as n,o as a,a as p}from"./app.6adfa164.js";const d=JSON.parse('{"title":"\u7528 Java \u590D\u523B NodeJS \u4E2D\u5DF2\u5E9F\u5F03\u7684\u52A0\u5BC6\u89E3\u5BC6\u65B9\u6CD5","description":"","frontmatter":{"title":"\u7528 Java \u590D\u523B NodeJS \u4E2D\u5DF2\u5E9F\u5F03\u7684\u52A0\u5BC6\u89E3\u5BC6\u65B9\u6CD5","tags":["Java","Node.js"]},"headers":[],"relativePath":"blog/14.md"}'),l={name:"blog/14.md"},o=p(`<h1 id="\u7528-java-\u590D\u523B-nodejs-\u4E2D\u5DF2\u5E9F\u5F03\u7684\u52A0\u5BC6\u89E3\u5BC6\u65B9\u6CD5" tabindex="-1">\u7528 Java \u590D\u523B NodeJS \u4E2D\u5DF2\u5E9F\u5F03\u7684\u52A0\u5BC6\u89E3\u5BC6\u65B9\u6CD5 <a class="header-anchor" href="#\u7528-java-\u590D\u523B-nodejs-\u4E2D\u5DF2\u5E9F\u5F03\u7684\u52A0\u5BC6\u89E3\u5BC6\u65B9\u6CD5" aria-hidden="true">#</a></h1><p>NodeJS <code>crypto.createCipher</code> \u548C <code>crypto.createDecipher</code> \u8FD9\u4E24\u4E2A\u521B\u5EFA\u52A0\u5BC6\u89E3\u5BC6\u5B9E\u4F8B\u7684\u65B9\u6CD5\u5728 <code>v10.0.0</code> \u4E4B\u540E\u5DF2\u7ECF\u5E9F\u5F03\u3002</p><p>\u5982\u679C\u6709\u4EE5\u4E0A Node \u52A0\u5BC6\u89E3\u5BC6\u4EE3\u7801\u9700\u8981\u7528 Java \u590D\u523B\uFF0C\u53C2\u8003\u4EE5\u4E0B stackoverflow \u4E0A\u7684\u95EE\u9898\uFF1A</p><p><a href="https://stackoverflow.com/questions/68418038/how-to-port-encrypt-aes192-method-from-nodejs-to-java-correctly" target="_blank" rel="noreferrer">node.js - How to port encrypt (AES192) method from nodejs to java correctly? - Stack Overflow</a></p><p>\u5177\u4F53\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#F286C4;">package</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">com.qcc.udf</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> org.apache.commons.lang3.ArrayUtils;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> org.springframework.security.crypto.codec.Hex;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> javax.crypto.Cipher;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> javax.crypto.spec.IvParameterSpec;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> javax.crypto.spec.SecretKeySpec;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> java.nio.charset.StandardCharsets;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> java.security.MessageDigest;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">DescriptionAESUDF</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;">args</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// \u52A0\u5BC6</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Result : </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">encrypt</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">xxx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">xxx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// \u89E3\u5BC6</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Result : </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">decrypt</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">xxxxxxxx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">xxx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[][] </span><span style="color:#62E884;">EVP_BytesToKey</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">key_len</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">iv_len</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">MessageDigest</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">md</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;">salt</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;">data</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">count</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[][] both </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">][];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] key </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[key_len];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> key_ix </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[]  iv </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[iv_len];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> iv_ix </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        both[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> key;</span></span>
<span class="line"><span style="color:#F6F6F4;">        both[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> iv;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] md_buf </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> nkey </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> key_len;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> niv </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> iv_len;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(data </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> both;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> addmd </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(;;) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            md.</span><span style="color:#62E884;">reset</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(addmd</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                md.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(md_buf);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">            md.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(data);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!=</span><span style="color:#F6F6F4;"> salt) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                md.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(salt,</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">            md_buf </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> md.</span><span style="color:#62E884;">digest</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(i</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">count;i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                md.</span><span style="color:#62E884;">reset</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">                md.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(md_buf);</span></span>
<span class="line"><span style="color:#F6F6F4;">                md_buf </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> md.</span><span style="color:#62E884;">digest</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">            i</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(nkey </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(;;) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(nkey </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> md_buf.length) </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    key[key_ix</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> md_buf[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">                    nkey</span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(niv </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">!=</span><span style="color:#F6F6F4;"> md_buf.length) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(;;) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(niv </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> md_buf.length) </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    iv[iv_ix</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> md_buf[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">                    niv</span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(nkey </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> niv </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(i</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">md_buf.length;i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            md_buf[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> both;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// \u52A0\u5BC6</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">encrypt</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">data</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">password</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">MessageDigest</span><span style="color:#F6F6F4;"> md5 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> MessageDigest.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MD5</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">Cipher</span><span style="color:#F6F6F4;"> cipher </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Cipher.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">AES/CBC/PKCS5Padding</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> keySizeBits </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">192</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">/</span><span style="color:#F6F6F4;"> Byte.SIZE; </span><span style="color:#7B7F8B;">//AES with 192 bits key = 16 bytes</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> ivSize </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> cipher.</span><span style="color:#62E884;">getBlockSize</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">final</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[][] keyAndIV </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">EVP_BytesToKey</span><span style="color:#F6F6F4;">(keySizeBits, ivSize, md5, </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">, password.</span><span style="color:#62E884;">getBytes</span><span style="color:#F6F6F4;">(StandardCharsets.US_ASCII), </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">SecretKeySpec</span><span style="color:#F6F6F4;"> key </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">SecretKeySpec</span><span style="color:#F6F6F4;">(keyAndIV[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">], </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">AES</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">IvParameterSpec</span><span style="color:#F6F6F4;"> iv </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">IvParameterSpec</span><span style="color:#F6F6F4;">(keyAndIV[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            cipher.</span><span style="color:#62E884;">init</span><span style="color:#F6F6F4;">(Cipher.ENCRYPT_MODE, key, iv);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] cipherText </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> cipher.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(data.</span><span style="color:#62E884;">getBytes</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">            cipherText </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ArrayUtils.</span><span style="color:#62E884;">addAll</span><span style="color:#F6F6F4;">(cipherText, cipher.</span><span style="color:#62E884;">doFinal</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">String</span><span style="color:#F6F6F4;">(Hex.</span><span style="color:#62E884;">encode</span><span style="color:#F6F6F4;">(cipherText));</span></span>
<span class="line"><span style="color:#F6F6F4;">        } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;">Exception</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">e</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            e.</span><span style="color:#62E884;">printStackTrace</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// \u89E3\u5BC6</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">decrypt</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">data</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">password</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">MessageDigest</span><span style="color:#F6F6F4;"> md5 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> MessageDigest.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MD5</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">Cipher</span><span style="color:#F6F6F4;"> cipher </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Cipher.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">AES/CBC/PKCS5Padding</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> keySizeBits </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">192</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">/</span><span style="color:#F6F6F4;"> Byte.SIZE; </span><span style="color:#7B7F8B;">//AES with 192 bits key = 16 bytes</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> ivSize </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> cipher.</span><span style="color:#62E884;">getBlockSize</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">final</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[][] keyAndIV </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">EVP_BytesToKey</span><span style="color:#F6F6F4;">(keySizeBits, ivSize, md5, </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">, password.</span><span style="color:#62E884;">getBytes</span><span style="color:#F6F6F4;">(StandardCharsets.US_ASCII), </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">SecretKeySpec</span><span style="color:#F6F6F4;"> key </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">SecretKeySpec</span><span style="color:#F6F6F4;">(keyAndIV[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">], </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">AES</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">IvParameterSpec</span><span style="color:#F6F6F4;"> iv </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">IvParameterSpec</span><span style="color:#F6F6F4;">(keyAndIV[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            cipher.</span><span style="color:#62E884;">init</span><span style="color:#F6F6F4;">(Cipher.DECRYPT_MODE, key, iv);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] cipherText </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> cipher.</span><span style="color:#62E884;">update</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">toByte</span><span style="color:#F6F6F4;">(data));</span></span>
<span class="line"><span style="color:#F6F6F4;">            cipherText </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ArrayUtils.</span><span style="color:#62E884;">addAll</span><span style="color:#F6F6F4;">(cipherText, cipher.</span><span style="color:#62E884;">doFinal</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">String</span><span style="color:#F6F6F4;">(cipherText);</span></span>
<span class="line"><span style="color:#F6F6F4;">        } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;">Exception</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">e</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            e.</span><span style="color:#62E884;">printStackTrace</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] </span><span style="color:#62E884;">toByte</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;">hexString</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> len </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> hexString.</span><span style="color:#62E884;">length</span><span style="color:#F6F6F4;">()</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[] result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-style:italic;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">byte</span><span style="color:#F6F6F4;">[len];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> len; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">            result[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Integer.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(hexString.</span><span style="color:#62E884;">substring</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">i, </span><span style="color:#BF9EEE;">2</span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">), </span><span style="color:#BF9EEE;">16</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">byteValue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> result;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre></div>`,6),F=[o];function e(t,c,r,y,i,E){return a(),n("div",null,F)}const u=s(l,[["render",e]]);export{d as __pageData,u as default};
